type Query {
  incidents: [Incident!]!
  incidentLabels: [IncidentLabel!]!
}

type Mutation {
  createIncident(input: CreateIncidentInput!): Incident!
  # createIncidentHistory(data: CreateIncidentHistoryInput!): IncidentHistory
}

type Subscription {
  newIncident: Incident!
}

type Incident {
  id: Int!
  information: String
  status: IncidentStatus!
  locationAddress: String
  locationLat: Float!
  locationLng: Float!
  label: IncidentLabel!
  createdBy: User!
  # incidentHistories: IncidentHistory!
  # imageUrls: [String!]!
  # userUpvotes: [User!]!
  createdAt: String!
  updatedAt: String!
}

enum IncidentStatus {
  OPEN
  CLOSED
}

input CreateIncidentInput {
  information: String!
  locationAddress: String
  locationLat: Float!
  locationLng: Float!
  # label ID
  label: Int!
}


type IncidentLabel {
  id: Int!
  name: String!
  icon: String!
}

# type IncidentHistory {
#   # bisa untuk menuliskan tindakan yang dilakukan
#   id: Int!
#   information: String!
#   imageUrls: [String!]!
# }
