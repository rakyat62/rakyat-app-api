type Query {
  organizations: OrganizationConnection!
}

type Mutation {
  createOrganization(login: String!, input: CreateOrganizationInput!): Organization!
  addOrganizationMember(organizationId: Int!, username: String!, role: UserRole): User
}

type OrganizationConnection {
  nodes: [Organization]
  totalCount: Int!
}

type Organization {
  id: ID!
  name: String
  isGovernment: Boolean
  description: String
  officeAddress: String
  members: [OrganizationMemberWithRole]
}

type OrganizationMemberWithRole implements UserType {
  id: ID!
  username: String
  email: String
  phone: String
  firstName: String
  lastName: String
  role: UserRole!
}

input CreateOrganizationInput {
  name: String!
  isGovernment: Boolean = false
  description: String = ""
  officeAddress: String!
}
